0327
ajax 전송 후 success시 document.write를 하면 페이지를 다시 씀
->innerHTML을 사용하여 태그 안의 내용을 바꾸는 것으로 변경.
ajax 비동기식 통신을 하고 싶으면 button은 submit type을 쓰면 안됨.
비동기식 통신을 하면 url은 변화하지 않음
-> 현재 보고 있는 월을 url로 표시해 주기(추후 새로고침을 했을 때 그 월을 유지하기 위함)
->history.replaceState를 사용해서 url 변경
->ajax안 파라미터 중 url은 http://localhost:8080/~와 같이 전체 경로를 사용할 수 있음.
@PathVariable을 사용해서 요청 url에 있는 값 추출
테이블 태그 안에 tr태그안에 td안에 table을 넣어야 인식한다. 그래서 주를 그릴때 div로 나눠서 거기서 표를 그려야한다..
jquery의 선택자를 이용하면 특정 속성을 가진 태그를 조작할 수 있다.

0328
resources파일에 넣어야 찾아갈 수 있다.
-> /파일

서버는 상태 정보를 가지고 있으면 안된다.
클라이언트가 정보를 들고 있어야 함.
->자바에서 멤버 변수를 사용하면 안됨.
->서버에서 클라이언트에 전송. h2같은데에 안보이게 해서

0329
쿠키는 사용자가 브라우저의 쿠키데이터를 비우거나 금지하지 않는 한 남아있음.
세션은 방문자가 접속해 세션이 발생되고 지정된 시간이 지나 세션 종료시 내용도 삭제.

0401
***table-layout:fixed를 해야 칸 너비가 고정.
min-width를 이용해서 화면이 작아져도 더 작아지지 않게
flex-wrap:nowrap으로 하면 레이아웃 안바뀜
클로저
http://chanlee.github.io/2013/12/10/understand-javascript-closure/
위 참고.
클로저를 이용하면 다른 함수내의 데이터를 사용할 수 있다.

+추가 표 width에 따라 표 줄 삭제
colNum으로 줄 조절

0402
controller에서 googleCalendarService를 사용할땐 try catch로. throws말고.
특정 값을 리턴해주고 싶으면 @ResponseBody를 쓰고 자료형 써야함
z-index는 클수록 앞으로 온다.
alert를 사용해서 한번 멈춰주는게 좋다?

button을 submit으로 해줘야 화면의 이동이 나타난다.

ajax통신시 dataType과 type 조심

시간이 있는 일정 중 오전 일정 값을 그대로 날짜 선택기 값으로 집어넣으면 그 전날 값이 나온다..
9시 보다 늦은 시간이어야 달력에 맞는 날짜가 찍힌다.

+추가  api인증받은 메일이 캘린더에 대한 권한이 없으면 수정,삭제 등에 오류가 생긴다....
simplecalendar-261@soy-storm-198708.iam.gserviceaccount.com
calendar@soy-storm-198708.iam.gserviceaccount.com

0403
*** SCOPES을 CALENDAR로 바꿔야 수정 가능.
->수정하고 crenditial 다 지우기.

위의 이메일 주소 추가는 딱히 안해도 되는 듯?
(서비스 계정)

form 태그에 accept-charset="UTF-8"을 해줘야 한글이 깨지지 않고 잘 간다.

클로저를 사용하니깐 클릭이벤트시 실행되는 함수를 외부함수로 하고 내부함수도 클릭이벤트시 실행되는 함수가 되면 외부 함수가 클릭 할때마다 쌓이게 되고 내부함수가 실행되면 클릭 되었던 외부함수들이 다 실행되게 됨.
--> 외부 함수가 먼저 실행되었던 순서대로 실행.
(원래는 일정의 제목을 누르면 실행되는 함수 안에 제목을 누를 시 나오는 삭제 버튼에 대한 이벤트를 받는 함수를 넣어놓았는데 위의 경우가 발생함.
일정 제목을 누르면 나오는 화면 안 삭제 버튼에 필요정보(calendarId, eventId를 저장))

종일과 그날 23시59분 간의 차이는 53940000 이다 여기에 1만 더해서 종일은 아래로!

종일과 그날 0시0분 간의 차이는 32400000 이다. 여기에 -1만 해도 종일은 위로 간다.

밀리초 = 시간*3600000

0404
relative, absolute관계에서 absolute포지션의 위치에 구간을 줄 때는 relative의 width, height크기를 이용해야 한다.

0405
인증을 여러번 하게 된다.. service를 저장하지 않고 Google Calendar API로 요청할때 마다 불러옴.
https://opentutorials.org/course/2473/16571
이사이트를 통해 구글 API인증 방법인 Oauth에 관해 공부함.
설명이 잘 나와있음

 URL Decoder, Encoder를 사용하면 url 파라미터로 사용할 수 있게 변환 시켜줌

0408
목록같이 스크롤이 아래로 낸려가는 경우에는 container, contents의 height를 auto로
스크롤 움직이면 안되는건 100%

0409
recurrence를 각각 하나의 이벤트로 안보는 이유는 다른 프로그램?과의 통일성을 위함이다.
Date객체를 받아 그대로 사용하면 여러 객체에서 해당 객체를 사용할 경우 Date객체의 값이 변경 될 수 있다.
그래서 방어 복사를 해야한다.
this.endTime = new Date(endTime.getTime()); 과 같이 되여야 함.

0410
여러 캘린더의 이벤트 리스트를 얻기위해 전에는 순차적으로 요청해서 시간이 느렸음.
쓰레드를 사용하여 동시에 호출해서 리스트를 얻게함. 시간이 500ms~700ms으로 줄음. 원래는 1초 초반대
http://seongtak-yoon.tistory.com/59
-> Executor, callable을 이용해 어떻게 쓰레드의 결과값을 반환할지 알려줌
http://hamait.tistory.com/612
->fakejoinpool에 대해 자세히 설명해줌. fakejoinpool은 thread pool에서 놀고 있는 쓰레드를 골라 바쁜 쓰레드의 일을 떼어서 주는 것
http://palpit.tistory.com/732
->쓰레드 풀 설명
http://happyourlife.tistory.com/135?category=577163
->쓰레드 동기화 시 어느 메모리?에서 동기화가 이뤄지는지
http://jdm.kr/blog/72
->thread 와 runnable 차이. runnable이 implements를 사용해서 추후 클래스를 더 상속 받을 수 있다

반복 일정인 경우 시작 날짜가 현재 보고 있는 월보다 전이어도 일정에는 들어온다. 단지 시작 날짜가 처음 매주 토요일을 시작한 날짜로 되어있어서 계속 이어져있을뿐
EventDTO에 recurrence 정보 추가해야할듯

//submit 엔터키 막기
$("*").keypress(function(e){
	if(e.keyCode == 13){
		return false;
	}
});

ajax로 전달할때 javascript에서 json 만들때 
var input = new Object();
	input.summary = $("#summary").val().toString();
	input.startDate = $("#startDatePicker").val().toString();
	input.startDateTime = $("#startTimePicker").val().toString();
	input.endDate = $("#endDatePicker").val().toString();
	input.endDateTime = $("#endTimePicker").val().toString();
	input.allDay = $("#allDayCheckBox").is(":checked").toString();
	input.location = $("#location").val().toString();
	input.description = $("#description").text().toString();
	var size = $("[data-alarmNum]").attr("data-alarmNum");
	
	var overrides = new Array();
	/*
	for(var i=0;i<size;i++){
		var override = new Object();
		override.method = $("[name='overrides["+i+"].method']").val().toString();
		override.minutes = ($("[name='overrides["+i+"].minutes']").val());
		overrides.push(override);
	}
	input.overrides = overrides;
	*/
	input.calendars = $("#calendarList").val().toString();
	input.eventId = $("#eventId").val().toString();
	input.calendarId = $("#calendarId").val().toString();
d이렇게만 해서 input 을 전달해줘도 됨..

0412
history.replaceState(data,"SimpleCalendar",pageUrl);
이렇게 하면 뒤로가기 했을때 남아 있지 않음..
pushState 이용

http://yamea-guide.tistory.com/51
여기 참고해서 ajax사용시 뒤로, 앞으로 가기 구현
data 있는지 보고 있으면 ajax 재요청

http://babolsk.tistory.com/1067
여기 참고해서 JSON 데이터 보내는거 구현

0413
https://www.zerocho.com/category/JavaScript?page=4
여기에 자바스크립트, jquery, react 설명 있음


0415
본인의 primary calendar아니면 응답 상태도 수정 안됨.
참석자가 추가할 수 있지만 마스터에만 반영 됨. 마스터에서 저장을 누르면 이제 모든 참석자에게 반영됨.
마스터가 아니면 참석자를 추가할 수 있고 내가 추가한 참석자만 삭제, 수정 가능.
마스터에게만 반영되고 나머지에게는 반영 안됨.
응답상태도 마찬가지. 마스터에게만 반영되고 나머지에게는 반영 안됨.

0416
링크 눌리는거 비활성화 시키려면 css에서 pointer-events : none 으로 해주고 다시 활성화 시키려면 없애면 됨.
파라미터에 있는거 그대로 쓰면 연결되서 리스트에 여러개 넣는다고 넣어도 다 같은 값 들어감.
객체를 복사한 후 사용해야 함.

https://www.kanzaki.com/docs/ical/recur.html
여기서 RRULE

http://ical4j.github.io/docs/ical4j/api/2.0.0/
여기서 ical4j

0417
DTSTART와 DTEND는 구글에서 지원해주지 않음 이 정보는 start, end field에 정의되어 있음
구글에서 반복 일정 중 삭제한 것은 EXDATE로 만들어주지 않고
또 다른 하나의 이벤트로 들어감....
이벤트 아이디는 초기 eventId_날짜 방식
status=canceled............
이후 모든 일정 삭제를 누르면 UNTIL로 값이 들어간다

var h = $(window).height();
	$(window).resize(function(){
		if(h != $(window).height()){
			calColNumAndPrintCalendar(year, month, data);
			h = $(window).height();
		}
	});
이런 형식으로 height 변경시에만 다시 그리게
******long이니깐 86400000에 l을 붙여주자...

반복 일정을 모아두었다가 나중에 제외 날짜 리스트랑 함께 그리기

0419
각 사용자마다 가지고 있는 defaultReminder은 다름.
사용자의 캘린더 마다도 다름.
그 캘린더가 공유 캘린더라도 각 사용자마다 다르게 설정할 수 있음.
종일 일정의 defaultReminder도 따로 설정이 가능하지만 API로는 못받아옴. 시간 일정만 가능.
대신 사용자가 구글에서 종일 일정의 defaultReminder로 설정했으면 API에서는 useDefault = false로 종일 일정의 defaultReminder의 값들을 가져와줌

반복 일정 이 일정만 수정할때 반복 패턴을 변경하는 거?

네이버-> 반복 일정의 패턴을 수정하면 전체 일정이 변경되도록 함
구글-> 반복 일정의 패턴이 수정되면 그 일정만 변경되서 새로운 일정이 됨
구글도 하나의 일정의 패턴 수정은 안됨
반복 일정의 패턴 기준은 어느날로 가도 원래 패턴 기준임!! 5/12부터 시작하면 5/12에 해당하는 패턴만 나옴.
구글도 하루 일정만 패턴을 수정하는 것은 불가능하다

원래 반복 일정은 한개다!

반복 일정 중 하나의 일정만 수정하면 ical에 그 일정에 대한 정보가 추가가됨.
그 추가된 정보 가지고 반복 일정중 하나에 대한 일정을 보여줌
향후 일정 수정 시 UNTIL로 그 전까지 기간이 잡히고 그 후는 새로운 이벤트가 생성이 됨 

 반복 일정 중 한개만 수정하면 RECURRENCE-ID를 가지고 UID는 반복 일정의 초기 일정의 UID와 일치. RECURRENCE-ID의 값으로 DATE-TIME이 들어감 recurrence set의 individual instance로 언급되는것.

반복 일정에서 하나의 일정만 수정한다는 것은 그 일정이 반복 일정에 포함된 상태에서 수정하고 싶은 것.
아니라면 새로 일정을 만들면 되겠지
반복 일정에 포함된 상태-> 수정. 근데 반복 일정 안에 그것을 시작날짜로 하는 반복 일정이 또 들어간다?

네이버-> 날짜를 바꿀 수 있는 것은 반복 일정의 한개의 일정만 가능.
구글->시작 날짜를 바꾸는 것은 한개의 일정과 향후 일정만 가능.
끝 날짜는 다 가능

0420
시작 날짜 바꿀 때 반복일정 패턴 안바꾸는 이유 : 초기 반복 일정의 룰을 유지시키기 위함

0422
#timePickerDiv -> 추후 시간 선택 창으로 사용할 것.
리스트로 시간 적어 놓기는 했음
구현해야 할 것
$(input).nextAll(":eq(2)").val()
-> 3번 옆으로간 형제 노드

요약창에 EXDATE 있으면 안나오는 거 수정

현재 EXDATE를 넣어서 하루 일정 수정 가능하지만 일정을 새로 추가해야함.
나중에 모든 일정 수정 해도 일정이 안사라짐.
종일 일정이냐 아니냐에 따라 알람 보이는거 다르게 해놓음

0423
구글-> 모든 일정을 변경할 때 개별 일정도 변경되기는 하지만 개별 일정으로서 유지시킴
 네이버-> 모든 일정을 변경할 때 개별 일정은 일괄 삭제 됨
향후 일정 변경은 새로운 아이디 값으로 만들어서 개별 일정도 다 삭제 됨

구글-> 반복 일정에서 반복 패턴을 수정할 때 향후 일정으로 수정하면 첫번째 일정은 종료일을 가지게 되는데 그 일정의 반복 패턴을 수정하려하면 모든 일정 밖에 수정 못함
종료일이 있는 패턴으로 수정하려 하거나 그 패턴에서 수정하려 하면 모든 일정 밖에 수정 못함
네이버 -> 종료일 있어도 향후 일정 수정 가능

향후 일정의 시작 일정도 recurringEventId가져서 exdate리스트에 들어가는 문제
-> 아니네..?

monthly로 해서 시작 시간 기준이니깐... 매월 시작 일정 일임.
-> 모든 일정을 바꿀 때는 일정 반복 패턴의 기준이 첫번째 일정이니깐 반복 패턴을 첫번째 일정으로 보여주는건 맞음.
->향후 일정을 바꿀 때는 현재 일정 날짜가 기준이 되기 때문에 달라지지만 향후 일정 바꿀지는 저장할때 받기 때문에 미리 알수는 없음.
css에 있는 클래스 순서가 아래로 갈수록 우선 순위를 가짐..

0424
drop할 수 있도록 해야 액박이 안뜸. -> ev.preventDefault();
처음 드래그 시작할때 그 태그만 draggable = true로 지정.
드래그할때 따라 오는 이미지는 내가 설정할 수 있음
->var img = new Image();
	img.src = '/image/transparent.png';
	event.dataTransfer.setDragImage(img,10,10);

아직 드래그 커서 해결 안됨.

마우스를 누르고 그 위를 mousemove하면 바뀌게 해보려 했으니 마우스를 up하는 부분이 화면에서 벗어나면 인식하지 못하는 문제가 있음.

addClass로 해야지 클래스가 추가됨. attr('class','클래스이름')이런식으로 하면 클래스이름밖에 들어가지 않음.

location.pathname으로 하면 url에 #이 들어가면 그 뒤로는 안가져옴
location.href로 해야 url을 full로 가져올 수 있음

calendar 수정도 writer까지만 가능

url뒤에 들어간 #뒤로는 새로고침할때 읽어오지를 않음...
if(type == "ko.south_korea"){
		result = "ko.south_korea#holiday@group.v.calendar.google.com";
	}
	if(type == "contacts"){
		result = "#contacts@group.v.calendar.google.com";
	}
이 두개가 문제
insert는 calendars로
나머지는 calendarList 이용
	-> 이게 더 설정할 수 있는게 많음

0425
recurringEventId와 originalStartTime(변경된 일정의 시작 시간) 둘다 써야지 개별 일정으로써 추가가 된다!!! 대박!
이렇게 하면 원래 이벤트에 EXDATE를 줄 필요 없음
originalStartTime은 첫번째 일정이 종일이면 종일 값을 가지고 시간이 있는 일정이면 시간이 있는 일정 값을 가져야한다
originalStartTime의 의미는 원래 이 일정이 있었어야하는 날짜시간을 의미하는 것

내 ACL은 변경 못함
Owner만 ACL 변경 가능
default scope은 owner, writer이 될 수 없다
ACL은 한번에 한개씩만 추가 가능하기 때문에 추가 누를때마다 검사 후 호출함. 삭제, 수정도 마찬가지
reminder이나 attendee는 리스트로 수정하기 때문에 한번에 수정이 가능하지만 이건 list로 안받아서 불가능.
ACL에 부 캘린더는 id@group.calendar.google.com의 형태로 나오는데 부 캘린더는 보여주지 않음.

0426
UNTIL -> inclusive
전에는 getUntil로 받은거에 하루치(86400000)만큼 더했는데 이렇게 하니 until의 다음날 9시까지 살펴봐서(한국 기준시) 다음날 오전 9시 이전 날까지 표시 됨.
하루치만큼 더하지 않고 until로 날짜를 받고 11시 59분까지 살펴보는 것으로 바꿈.
LocalDateTime으로 바꿔서 썼는데 다음날 9시까지 보는걸로 해야 UNTIL이 제대로 나옴
recur에 until 있으니깐 굳이 기간을 그에 맞춰서 안해도 됨.

Date는 이제 안쓰니깐
LocalDate나 localDateTime을 사용하자

long to localDate
LocalDate localdate = Instant.ofEpochMilli(now.getValue()).atZone(ZoneId.systemDefault()).toLocalDate();

localDate to long
date.atStartOfDay(ZoneOffset.UTC).toInstant().toEpochMilli()

나중에 drawWeeklyCalendar true로 바꾸기

1안 -> 월뷰를 받을때 정보를 태그에 저장해 놓아서 일, 주, 목록 뿌릴때 사용
	-> 장점 : API에서 다시 데이터를 받아오지 않아도 되므로 빠르다
	-> 단점 : 한달에 있는 일정이 많아지면 그만큼 태그의 양도 증가한다.
2안 -> 일, 주, 월, 목록을 누를때마다 데이터를 받아온다
	-> 장점 : 많은 정보를 페이지내에 저장하지 않아도 됨
	-> 단점 : API에서 일정을 받아오는 속도가 느림. 한번당 500ms 이상

API에서 데이터를 받아오는데 일정의 양, 기간에 상관없이 500ms 이상 걸림.
->하루치만 받았을 때 700~800ms 정도 나옴
->한달 받아도 그정도. 비슷.

0427
**표의 맨 첫줄이 안잡혀져 있으면(제대로 나눠져 있지 않는 상태 colspan으로 인해?) colspan이 안먹음
맨 첫줄을 보이지 않게 해서 유지 시키고 그다음에 작성
월 캘린더는 항상 첫줄이 colspan없이 되어있었기 때문에(날짜 때문에)
이런 혼돈이 없었찌..

**일뷰 캘린더 width 고정. height 스크롤 들어간거 해결

0429
1000px->1440px로 변경 60*24
display:flex 이용하면 width 하나는 고정시키고 다른쪽은 그에 맞게 늘였다 줄였다 할 수 있음
고정 -> flex:none
변하는 곳 -> flex:1
flex 값따라 비율 줄 수 있음. 1,2있으면 1/3, 2/3

0430
일정 하루치 가져올때 다음날 0시0분까지를 max로 잡음
**캘린더 최대 칸 개수 세는거 고치기
